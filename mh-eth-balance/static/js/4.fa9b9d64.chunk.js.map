{"version":3,"sources":["components/Button/Button.styles.ts","components/Button/index.ts","components/Button/Button.tsx","constants/units.ts","views/Balance/Balance.styles.ts","views/Balance/Balance.tsx","views/Balance/index.ts"],"names":["StyledButton","styled","button","Button","props","units","Wrapper","div","AnimatedWrapper","motion","StyledBalance","p","ButtonsWrapper","StyledSelect","select","Balance","store","useLocalStore","unit","balance","isLoading","refreshBalance","getBalance","rootStore","web3","eth","authStore","adress","isAddress","then","b","onChange","event","value","currentTarget","useEffect","useObserver","onClick","signOut","exitBeforeEnter","key","initial","opacity","animate","exit","transition","duration","y","fromWei","defaultValue","map","index"],"mappings":"4aAEO,IAAMA,EAAeC,IAAOC,OAAV,KCAVC,ECGkB,SAAAC,GAC/B,OAAO,kBAACJ,EAAiBI,ICJdC,EAAgB,CAC3B,MACA,OACA,OACA,UACA,aACA,OACA,OACA,WACA,YACA,OACA,OACA,UACA,YACA,OACA,QACA,aACA,QACA,SACA,aACA,QACA,QACA,SACA,QACA,SACA,SACA,U,6vBCzBK,IAAMC,EAAUL,IAAOM,IAAV,KAOPC,EAAkBP,YAAOQ,IAAOF,IAAdN,CAAH,KAMfS,EAAgBT,IAAOU,EAAV,KAObC,EAAiBX,IAAOM,IAAV,KAMdM,EAAeZ,IAAOa,OAAV,KCwEVC,EAtFW,WACxB,IAAMC,EAAQC,aAAc,iBAAO,CACjCC,KAAM,QACNC,QAAS,GACTC,WAAW,EAEXC,eALiC,WAM/BL,EAAMI,WAAY,EADH,IAIJE,EAGPC,IAJFC,KACEC,IAAOH,WAJI,EAOXC,IADFG,UAAaC,cANA,MAMS,GANT,EASfC,oBAAUD,IACRL,EAAWK,GAAQE,MAAK,SAAAC,GACtBd,EAAMG,QAAUW,EAChBd,EAAMI,WAAY,MAIxBW,SArBiC,SAqBxBC,GAA8C,IAC7CC,EAAUD,EAAME,cAAhBD,MACRjB,EAAME,KAAOe,OAQjB,OAJAE,qBAAU,WACRnB,EAAMK,mBACL,IAEIe,aAAY,kBACjB,oCACGpB,EAAMG,SACL,kBAACP,EAAD,KACE,kBAAC,EAAD,CAAQyB,QAASrB,EAAMK,gBACpBL,EAAMI,UAAY,aAAe,WAEpC,kBAAC,EAAD,CAAQiB,QAASd,IAAUG,UAAUY,SAArC,SAIJ,kBAAChC,EAAD,KACE,kBAAC,IAAD,CAAiBiC,iBAAe,IAC5BvB,EAAMG,SAAWH,EAAMI,WACvB,kBAACZ,EAAD,CACEgC,IAAI,SACJC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GACjBG,WAAY,CAAEC,SAAU,KAL1B,cAWD9B,EAAMG,SACL,kBAACX,EAAD,CACEgC,IAAI,UACJC,QAAS,CAAEC,QAAS,EAAGK,GAAI,IAC3BH,KAAM,CAAEF,QAAS,EAAGK,GAAI,IACxBJ,QAAS,CACPD,QAAS,EACTK,EAAG,GAELF,WAAY,CAAEC,SAAU,KAExB,kBAACpC,EAAD,iBACYsC,kBAAQhC,EAAMG,QAASH,EAAME,OAEzC,kBAACL,EAAD,CAAckB,SAAUf,EAAMe,SAAUkB,aAAcjC,EAAME,MACzDb,EAAM6C,KAAI,SAAChC,EAAMiC,GAAP,OACT,4BAAQX,IAAKW,EAAOlB,MAAOf,GACxBA,eCvFNH","file":"static/js/4.fa9b9d64.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button`\r\n  background: #222225;\r\n  color: #909090;\r\n  border: 1px solid #909090;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  width: 8rem;\r\n  padding: 0.5rem 1rem;\r\n`;\r\n","import Button from './Button';\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport { StyledButton } from './Button.styles';\r\n\r\ntype TProps = React.ButtonHTMLAttributes<HTMLButtonElement>;\r\n\r\nconst Button: React.FC<TProps> = props => {\r\n  return <StyledButton {...props} />;\r\n};\r\n\r\nexport default Button;\r\n","import { Unit } from 'web3-utils';\r\n\r\nexport const units: Unit[] = [\r\n  'wei',\r\n  'kwei',\r\n  'Kwei',\r\n  'babbage',\r\n  'femtoether',\r\n  'mwei',\r\n  'Mwei',\r\n  'lovelace',\r\n  'picoether',\r\n  'gwei',\r\n  'Gwei',\r\n  'shannon',\r\n  'nanoether',\r\n  'nano',\r\n  'szabo',\r\n  'microether',\r\n  'micro',\r\n  'finney',\r\n  'milliether',\r\n  'milli',\r\n  'ether',\r\n  'kether',\r\n  'grand',\r\n  'mether',\r\n  'gether',\r\n  'tether'\r\n];\r\n","import styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\n\r\nexport const Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport const AnimatedWrapper = styled(motion.div)`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 2rem 0;\r\n`;\r\n\r\nexport const StyledBalance = styled.p`\r\n  color: #909090;\r\n  font-size: 4rem;\r\n  margin: 0;\r\n  margin-right: 1rem;\r\n`;\r\n\r\nexport const ButtonsWrapper = styled.div`\r\n  position: absolute;\r\n  top: 4rem;\r\n  right: 4rem;\r\n`;\r\n\r\nexport const StyledSelect = styled.select`\r\n  background: #222225;\r\n  border: none;\r\n  font-size: 2rem;\r\n  color: #909090;\r\n\r\n  & > option {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n","import { AnimatePresence } from 'framer-motion';\r\nimport { useLocalStore, useObserver } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { fromWei, isAddress, Unit } from 'web3-utils';\r\nimport Button from '../../components/Button';\r\nimport { units } from '../../constants/units';\r\nimport { rootStore } from '../../stores';\r\nimport {\r\n  AnimatedWrapper,\r\n  ButtonsWrapper,\r\n  StyledBalance,\r\n  StyledSelect,\r\n  Wrapper\r\n} from './Balance.styles';\r\n\r\nconst Balance: React.FC = () => {\r\n  const store = useLocalStore(() => ({\r\n    unit: 'ether' as Unit,\r\n    balance: '',\r\n    isLoading: false,\r\n\r\n    refreshBalance() {\r\n      store.isLoading = true;\r\n      const {\r\n        web3: {\r\n          eth: { getBalance }\r\n        },\r\n        authStore: { adress = '' }\r\n      } = rootStore;\r\n\r\n      isAddress(adress) &&\r\n        getBalance(adress).then(b => {\r\n          store.balance = b;\r\n          store.isLoading = false;\r\n        });\r\n    },\r\n\r\n    onChange(event: React.ChangeEvent<HTMLSelectElement>) {\r\n      const { value } = event.currentTarget;\r\n      store.unit = value as Unit;\r\n    }\r\n  }));\r\n\r\n  useEffect(() => {\r\n    store.refreshBalance();\r\n  }, []);\r\n\r\n  return useObserver(() => (\r\n    <>\r\n      {store.balance && (\r\n        <ButtonsWrapper>\r\n          <Button onClick={store.refreshBalance}>\r\n            {store.isLoading ? 'Loading...' : 'Refresh'}\r\n          </Button>\r\n          <Button onClick={rootStore.authStore.signOut}>Exit</Button>\r\n        </ButtonsWrapper>\r\n      )}\r\n\r\n      <Wrapper>\r\n        <AnimatePresence exitBeforeEnter>\r\n          {!store.balance && store.isLoading && (\r\n            <AnimatedWrapper\r\n              key=\"loader\"\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              exit={{ opacity: 0 }}\r\n              transition={{ duration: 0.5 }}\r\n            >\r\n              loading...\r\n            </AnimatedWrapper>\r\n          )}\r\n\r\n          {store.balance && (\r\n            <AnimatedWrapper\r\n              key=\"balance\"\r\n              initial={{ opacity: 0, y: -50 }}\r\n              exit={{ opacity: 0, y: -50 }}\r\n              animate={{\r\n                opacity: 1,\r\n                y: 0\r\n              }}\r\n              transition={{ duration: 0.5 }}\r\n            >\r\n              <StyledBalance>\r\n                Balance: {fromWei(store.balance, store.unit)}\r\n              </StyledBalance>\r\n              <StyledSelect onChange={store.onChange} defaultValue={store.unit}>\r\n                {units.map((unit, index) => (\r\n                  <option key={index} value={unit}>\r\n                    {unit}\r\n                  </option>\r\n                ))}\r\n              </StyledSelect>\r\n            </AnimatedWrapper>\r\n          )}\r\n        </AnimatePresence>\r\n      </Wrapper>\r\n    </>\r\n  ));\r\n};\r\n\r\nexport default Balance;\r\n","import Balance from './Balance';\r\n\r\nexport default Balance;\r\n"],"sourceRoot":""}