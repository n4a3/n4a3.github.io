{"version":3,"sources":["components/Button/Button.styles.ts","components/Button/index.ts","components/Button/Button.tsx","constants/units.ts","views/Balance/Balance.styles.ts","views/Balance/Balance.tsx","views/Balance/index.ts"],"names":["StyledButton","styled","button","Button","props","units","Wrapper","div","AnimatedWrapper","motion","StyledBalance","p","ButtonsWrapper","StyledSelect","select","Balance","useEffect","rootStore","balanceStore","refreshBalance","useObserver","balance","onClick","isLoading","authStore","signOut","exitBeforeEnter","error","key","initial","opacity","animate","exit","transition","duration","JSON","stringify","y","fromWei","unit","onChange","defaultValue","map","index","value"],"mappings":"4aAEO,IAAMA,EAAeC,IAAOC,OAAV,KCAVC,ECGkB,SAAAC,GAC/B,OAAO,kBAACJ,EAAiBI,ICJdC,EAAgB,CAC3B,MACA,OACA,OACA,UACA,aACA,OACA,OACA,WACA,YACA,OACA,OACA,UACA,YACA,OACA,QACA,aACA,QACA,SACA,aACA,QACA,QACA,SACA,QACA,SACA,SACA,U,6vBCzBK,IAAMC,EAAUL,IAAOM,IAAV,KAOPC,EAAkBP,YAAOQ,IAAOF,IAAdN,CAAH,KAMfS,EAAgBT,IAAOU,EAAV,KAObC,EAAiBX,IAAOM,IAAV,KAMdM,EAAeZ,IAAOa,OAAV,KCiEVC,EA/EW,WAKxB,OAJAC,qBAAU,WACRC,IAAUC,aAAaC,mBACtB,IAEIC,aAAY,kBACjB,oCACGH,IAAUC,aAAaG,SACtB,kBAACT,EAAD,KACE,kBAAC,EAAD,CAAQU,QAASL,IAAUC,aAAaC,gBACrCF,IAAUC,aAAaK,UAAY,aAAe,WAErD,kBAAC,EAAD,CAAQD,QAASL,IAAUO,UAAUC,SAArC,SAIJ,kBAACnB,EAAD,KACE,kBAAC,IAAD,CAAiBoB,iBAAe,IAC5BT,IAAUC,aAAaG,UACtBJ,IAAUC,aAAaK,WACtBN,IAAUC,aAAaS,QACvB,kBAACnB,EAAD,CACEoB,IAAI,SACJC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GACjBG,WAAY,CAAEC,SAAU,KAEvBjB,IAAUC,aAAaS,MACtB,8CACUQ,KAAKC,UAAUnB,IAAUC,aAAaS,OAC9C,kBAAC,EAAD,CAAQL,QAASL,IAAUC,aAAaC,gBACrCF,IAAUC,aAAaK,UACpB,aACA,cAIR,cAKPN,IAAUC,aAAaG,SACtB,kBAACb,EAAD,CACEoB,IAAI,UACJC,QAAS,CAAEC,QAAS,EAAGO,GAAI,IAC3BL,KAAM,CAAEF,QAAS,EAAGO,GAAI,IACxBN,QAAS,CACPD,QAAS,EACTO,EAAG,GAELJ,WAAY,CAAEC,SAAU,KAExB,kBAACxB,EAAD,gBACW,IACR4B,kBACCrB,IAAUC,aAAaG,QACvBJ,IAAUC,aAAaqB,OAG3B,kBAAC1B,EAAD,CACE2B,SAAUvB,IAAUC,aAAasB,SACjCC,aAAcxB,IAAUC,aAAaqB,MAEpClC,EAAMqC,KAAI,SAACH,EAAMI,GAAP,OACT,4BAAQf,IAAKe,EAAOC,MAAOL,GACxBA,eChFNxB","file":"static/js/4.c36b27f2.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  background: #222225;\n  color: #909090;\n  border: 1px solid #909090;\n  border-radius: 4px;\n  font-size: 1rem;\n  width: 8rem;\n  padding: 0.5rem 1rem;\n`;\n","import Button from './Button';\n\nexport default Button;\n","import React from 'react';\nimport { StyledButton } from './Button.styles';\n\ntype TProps = React.ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button: React.FC<TProps> = props => {\n  return <StyledButton {...props} />;\n};\n\nexport default Button;\n","import { Unit } from 'web3-utils';\n\nexport const units: Unit[] = [\n  'wei',\n  'kwei',\n  'Kwei',\n  'babbage',\n  'femtoether',\n  'mwei',\n  'Mwei',\n  'lovelace',\n  'picoether',\n  'gwei',\n  'Gwei',\n  'shannon',\n  'nanoether',\n  'nano',\n  'szabo',\n  'microether',\n  'micro',\n  'finney',\n  'milliether',\n  'milli',\n  'ether',\n  'kether',\n  'grand',\n  'mether',\n  'gether',\n  'tether'\n];\n","import styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const AnimatedWrapper = styled(motion.div)`\n  display: flex;\n  align-items: center;\n  margin: 2rem 0;\n`;\n\nexport const StyledBalance = styled.p`\n  color: #909090;\n  font-size: 4rem;\n  margin: 0;\n  margin-right: 1rem;\n`;\n\nexport const ButtonsWrapper = styled.div`\n  position: absolute;\n  top: 4rem;\n  right: 4rem;\n`;\n\nexport const StyledSelect = styled.select`\n  background: #222225;\n  border: none;\n  font-size: 2rem;\n  color: #909090;\n\n  & > option {\n    font-size: 1rem;\n  }\n`;\n","import { AnimatePresence } from 'framer-motion';\nimport { useObserver } from 'mobx-react-lite';\nimport React, { useEffect } from 'react';\nimport { fromWei } from 'web3-utils';\nimport Button from '../../components/Button';\nimport { units } from '../../constants/units';\nimport { rootStore } from '../../stores';\nimport {\n  AnimatedWrapper,\n  ButtonsWrapper,\n  StyledBalance,\n  StyledSelect,\n  Wrapper\n} from './Balance.styles';\n\nconst Balance: React.FC = () => {\n  useEffect(() => {\n    rootStore.balanceStore.refreshBalance();\n  }, []);\n\n  return useObserver(() => (\n    <>\n      {rootStore.balanceStore.balance && (\n        <ButtonsWrapper>\n          <Button onClick={rootStore.balanceStore.refreshBalance}>\n            {rootStore.balanceStore.isLoading ? 'Loading...' : 'Refresh'}\n          </Button>\n          <Button onClick={rootStore.authStore.signOut}>Exit</Button>\n        </ButtonsWrapper>\n      )}\n\n      <Wrapper>\n        <AnimatePresence exitBeforeEnter>\n          {!rootStore.balanceStore.balance &&\n            (rootStore.balanceStore.isLoading ||\n              rootStore.balanceStore.error) && (\n              <AnimatedWrapper\n                key=\"loader\"\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n                transition={{ duration: 0.5 }}\n              >\n                {rootStore.balanceStore.error ? (\n                  <>\n                    error: {JSON.stringify(rootStore.balanceStore.error)}\n                    <Button onClick={rootStore.balanceStore.refreshBalance}>\n                      {rootStore.balanceStore.isLoading\n                        ? 'Loading...'\n                        : 'Try again'}\n                    </Button>\n                  </>\n                ) : (\n                  'loading...'\n                )}\n              </AnimatedWrapper>\n            )}\n\n          {rootStore.balanceStore.balance && (\n            <AnimatedWrapper\n              key=\"balance\"\n              initial={{ opacity: 0, y: -50 }}\n              exit={{ opacity: 0, y: -50 }}\n              animate={{\n                opacity: 1,\n                y: 0\n              }}\n              transition={{ duration: 0.5 }}\n            >\n              <StyledBalance>\n                Balance:{' '}\n                {fromWei(\n                  rootStore.balanceStore.balance,\n                  rootStore.balanceStore.unit\n                )}\n              </StyledBalance>\n              <StyledSelect\n                onChange={rootStore.balanceStore.onChange}\n                defaultValue={rootStore.balanceStore.unit}\n              >\n                {units.map((unit, index) => (\n                  <option key={index} value={unit}>\n                    {unit}\n                  </option>\n                ))}\n              </StyledSelect>\n            </AnimatedWrapper>\n          )}\n        </AnimatePresence>\n      </Wrapper>\n    </>\n  ));\n};\n\nexport default Balance;\n","import Balance from './Balance';\n\nexport default Balance;\n"],"sourceRoot":""}